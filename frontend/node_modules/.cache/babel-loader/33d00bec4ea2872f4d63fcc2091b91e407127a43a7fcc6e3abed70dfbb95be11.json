{"ast":null,"code":"export const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\nexport const isSameSender = (messages, m, i, userId) => {\n  return i < messages.length - 1 && (messages[i + 1].sender._id !== m.sender._id || messages[i + 1].sender._id === undefined) && messages[i].sender._id !== userId;\n};\nexport const isLastMessage = (messages, i, userId) => {\n  return i === messages.length - 1 && messages[messages.length - 1].sender._id !== userId && messages[messages.length - 1].sender._id;\n};\nexport const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (i < messages.length - 1 && messages[i + 1].sender._id === m.sender._id && messages[i].sender._id !== userId) return 33;else if (i < messages.length - 1 && messages[i + 1].sender._id !== m.sender._id && messages[i].sender._id !== userId || i === messages.length - 1 && messages[i].sender._id !== userId) return 0;else return \"auto\";\n};\n\n// Used for giving space between two messages\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};","map":{"version":3,"names":["getSender","loggedUser","users","_id","name","getSenderFull","isSameSender","messages","m","i","userId","length","sender","undefined","isLastMessage","isSameSenderMargin","isSameUser"],"sources":["C:/Users/phanb/OneDrive/Desktop/Scholar-Chat/frontend/src/config/ChatLogic.js"],"sourcesContent":["export const getSender = (loggedUser, users) => {\r\n    return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n}\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n    return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n}\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n    return (\r\n        i < messages.length - 1 &&\r\n        (messages[i + 1].sender._id !== m.sender._id ||\r\n            messages[i + 1].sender._id === undefined) &&\r\n        messages[i].sender._id !== userId\r\n    );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n    return (\r\n        i === messages.length - 1 &&\r\n        messages[messages.length - 1].sender._id !== userId &&\r\n        messages[messages.length - 1].sender._id\r\n    );\r\n};\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n    // console.log(i === messages.length - 1);\r\n\r\n    if (\r\n        i < messages.length - 1 &&\r\n        messages[i + 1].sender._id === m.sender._id &&\r\n        messages[i].sender._id !== userId\r\n    )\r\n        return 33;\r\n    else if (\r\n        (i < messages.length - 1 &&\r\n            messages[i + 1].sender._id !== m.sender._id &&\r\n            messages[i].sender._id !== userId) ||\r\n        (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n    )\r\n        return 0;\r\n    else return \"auto\";\r\n};\r\n\r\n// Used for giving space between two messages\r\nexport const isSameUser = (messages, m, i) => {\r\n    return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CAACC,UAAU,EAAEC,KAAK,KAAK;EAC5C,OAAOA,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,KAAKF,UAAU,CAACE,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI;AAC1E,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,CAACJ,UAAU,EAAEC,KAAK,KAAK;EAChD,OAAOA,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,KAAKF,UAAU,CAACE,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;AAChE,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,CAACC,QAAQ,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,KAAK;EACpD,OACID,CAAC,GAAGF,QAAQ,CAACI,MAAM,GAAG,CAAC,KACtBJ,QAAQ,CAACE,CAAC,GAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKK,CAAC,CAACI,MAAM,CAACT,GAAG,IACxCI,QAAQ,CAACE,CAAC,GAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKU,SAAS,CAAC,IAC7CN,QAAQ,CAACE,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKO,MAAM;AAEzC,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,CAACP,QAAQ,EAAEE,CAAC,EAAEC,MAAM,KAAK;EAClD,OACID,CAAC,KAAKF,QAAQ,CAACI,MAAM,GAAG,CAAC,IACzBJ,QAAQ,CAACA,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACC,MAAM,CAACT,GAAG,KAAKO,MAAM,IACnDH,QAAQ,CAACA,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACC,MAAM,CAACT,GAAG;AAEhD,CAAC;AAED,OAAO,MAAMY,kBAAkB,GAAG,CAACR,QAAQ,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,KAAK;EAC1D;;EAEA,IACID,CAAC,GAAGF,QAAQ,CAACI,MAAM,GAAG,CAAC,IACvBJ,QAAQ,CAACE,CAAC,GAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKK,CAAC,CAACI,MAAM,CAACT,GAAG,IAC3CI,QAAQ,CAACE,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKO,MAAM,EAEjC,OAAO,EAAE,CAAC,KACT,IACAD,CAAC,GAAGF,QAAQ,CAACI,MAAM,GAAG,CAAC,IACpBJ,QAAQ,CAACE,CAAC,GAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKK,CAAC,CAACI,MAAM,CAACT,GAAG,IAC3CI,QAAQ,CAACE,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKO,MAAM,IACpCD,CAAC,KAAKF,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACE,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKO,MAAO,EAEhE,OAAO,CAAC,CAAC,KACR,OAAO,MAAM;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAG,CAACT,QAAQ,EAAEC,CAAC,EAAEC,CAAC,KAAK;EAC1C,OAAOA,CAAC,GAAG,CAAC,IAAIF,QAAQ,CAACE,CAAC,GAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,KAAKK,CAAC,CAACI,MAAM,CAACT,GAAG;AAC/D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}