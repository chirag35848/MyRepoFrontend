{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phanb\\\\OneDrive\\\\Desktop\\\\Scholar-Chat\\\\frontend\\\\src\\\\components\\\\ScrollableChat.js\";\nimport { Avatar, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from '../config/ChatLogic';\nimport { ChatState } from '../Context/ChatProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollableChat = _ref => {\n  let {\n    messages\n  } = _ref;\n  // console.log(\"from feed\");\n  // console.log(messages);\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n    children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [(isSameSender(messages, m, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: m.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: m.sender.name,\n          src: m.sender.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n          marginLeft: isSameSenderMargin(messages, m, i, user._id),\n          marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\"\n        },\n        children: m.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, m._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ScrollableChat;\nexport default ScrollableChat;\nvar _c;\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"names":["Avatar","Tooltip","React","ScrollableFeed","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatState","ScrollableChat","messages","user","map","m","i","display","_id","sender","name","pic","backgroundColor","marginLeft","marginTop","borderRadius","padding","maxWidth","content"],"sources":["C:/Users/phanb/OneDrive/Desktop/Scholar-Chat/frontend/src/components/ScrollableChat.js"],"sourcesContent":["import { Avatar, Tooltip } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from '../config/ChatLogic';\r\nimport { ChatState } from '../Context/ChatProvider';\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  // console.log(\"from feed\");\r\n  // console.log(messages);\r\n  const { user } = ChatState();\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages && messages.map((m, i) => (\r\n        <div style={{ display: 'flex' }} key={m._id}>\r\n          {(isSameSender(messages, m, i, user._id) ||\r\n            isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n\r\n          <span\r\n            style={{\r\n              backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n              marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n              marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n              borderRadius: \"20px\",\r\n              padding: \"5px 15px\",\r\n              maxWidth: \"75%\",\r\n            }}\r\n          >\r\n            {m.content}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </ScrollableFeed>\r\n  )\r\n}\r\n\r\nexport default ScrollableChat;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,uBAAuB;AAClD,SAASC,aAAa,EAAEC,YAAY,EAAEC,kBAAkB,EAAEC,UAAU,QAAQ,qBAAqB;AACjG,SAASC,SAAS,QAAQ,yBAAyB;AAAC;AAEpD,MAAMC,cAAc,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAClC;EACA;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGH,SAAS,EAAE;EAC5B,oBACE,QAAC,cAAc;IAAA,UACZE,QAAQ,IAAIA,QAAQ,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC7B;MAAK,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAA,WAC7B,CAACV,YAAY,CAACK,QAAQ,EAAEG,CAAC,EAAEC,CAAC,EAAEH,IAAI,CAACK,GAAG,CAAC,IACtCZ,aAAa,CAACM,QAAQ,EAAEI,CAAC,EAAEH,IAAI,CAACK,GAAG,CAAC,kBAClC,QAAC,OAAO;QAAC,KAAK,EAAEH,CAAC,CAACI,MAAM,CAACC,IAAK;QAAC,SAAS,EAAC,cAAc;QAAC,QAAQ;QAAA,uBAC9D,QAAC,MAAM;UACL,EAAE,EAAC,KAAK;UACR,EAAE,EAAE,CAAE;UACN,IAAI,EAAC,IAAI;UACT,MAAM,EAAC,SAAS;UAChB,IAAI,EAAEL,CAAC,CAACI,MAAM,CAACC,IAAK;UACpB,GAAG,EAAEL,CAAC,CAACI,MAAM,CAACE;QAAI;UAAA;UAAA;UAAA;QAAA;MAClB;QAAA;QAAA;QAAA;MAAA,QAEL,eAEH;QACE,KAAK,EAAE;UACLC,eAAe,EAAG,GAAEP,CAAC,CAACI,MAAM,CAACD,GAAG,KAAKL,IAAI,CAACK,GAAG,GAAG,SAAS,GAAG,SACzD,EAAC;UACJK,UAAU,EAAEf,kBAAkB,CAACI,QAAQ,EAAEG,CAAC,EAAEC,CAAC,EAAEH,IAAI,CAACK,GAAG,CAAC;UACxDM,SAAS,EAAEf,UAAU,CAACG,QAAQ,EAAEG,CAAC,EAAEC,CAAC,EAAEH,IAAI,CAACK,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;UACxDO,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,UAAU;UACnBC,QAAQ,EAAE;QACZ,CAAE;QAAA,UAEDZ,CAAC,CAACa;MAAO;QAAA;QAAA;QAAA;MAAA,QACL;IAAA,GA3B6Bb,CAAC,CAACG,GAAG;MAAA;MAAA;MAAA;IAAA,QA6B5C;EAAC;IAAA;IAAA;IAAA;EAAA,QACa;AAErB,CAAC;AAAA,KAvCKP,cAAc;AAyCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}