{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phanb\\\\OneDrive\\\\Desktop\\\\Scholar-Chat\\\\frontend\\\\src\\\\components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, Stack, useToast, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { ChatState } from '../Context/ChatProvider';\nimport axios from 'axios';\nimport { AddIcon } from '@chakra-ui/icons';\nimport ChatLoading from './ChatLoading';\nimport { getSender } from '../config/ChatLogic';\nimport GroupChatModal from './misc/GroupChatModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = _ref => {\n  _s();\n  let {\n    fetchAgain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n      // console.log(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    d: {\n      base: selectedChat ? 'none' : 'flex',\n      md: 'flex'\n    },\n    flexDir: \"column\",\n    alignItems: 'center',\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: '100%',\n      md: '31%'\n    },\n    borderRadius: 'lg',\n    borderWidth: '1px',\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          d: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 36\n          }, this),\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: 'scroll',\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["Box","Button","Stack","useToast","Text","React","useEffect","useState","ChatState","axios","AddIcon","ChatLoading","getSender","GroupChatModal","MyChats","fetchAgain","loggedUser","setLoggedUser","user","selectedChat","setSelectedChat","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","message","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md","lg","map","chat","isGroupChat","users","chatName","_id"],"sources":["C:/Users/phanb/OneDrive/Desktop/Scholar-Chat/frontend/src/components/MyChats.js"],"sourcesContent":["import { Box, Button, Stack, useToast,Text } from '@chakra-ui/react';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ChatState } from '../Context/ChatProvider'\r\nimport axios from 'axios';\r\nimport { AddIcon } from '@chakra-ui/icons';\r\nimport ChatLoading from './ChatLoading';\r\nimport { getSender } from '../config/ChatLogic'\r\nimport GroupChatModal from './misc/GroupChatModal';\r\n \r\nconst MyChats = ({fetchAgain}) => {\r\n    const [loggedUser, setLoggedUser] = useState();\r\n    const { user, selectedChat, setSelectedChat, chats, setChats } = ChatState();\r\n    const toast = useToast();\r\n\r\n    const fetchChats = async () => {\r\n        // console.log(user._id);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.get(\"/api/chat\", config);\r\n            setChats(data);\r\n            // console.log(data);\r\n        } catch (error) {\r\n            toast({\r\n                title: \"Error Occured!\",\r\n                description: error.message,\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n        fetchChats();\r\n    },[fetchAgain])\r\n\r\n    return (\r\n        <Box\r\n        d={{base :selectedChat?'none':'flex',md:'flex'}}\r\n        flexDir='column'\r\n        alignItems={'center'}\r\n        p={3}\r\n        bg='white'\r\n        w={{base:'100%',md:'31%'}}\r\n        borderRadius={'lg'}\r\n        borderWidth={'1px'}\r\n        >\r\n            <Box \r\n            pb={3}\r\n            px={3}\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            w=\"100%\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            >\r\n                My Chats\r\n                <GroupChatModal>\r\n                    <Button\r\n                        d=\"flex\"\r\n                        fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n                        rightIcon={<AddIcon />}\r\n                    >\r\n                        New Group Chat\r\n                    </Button>\r\n                </GroupChatModal>\r\n            </Box>\r\n\r\n            <Box\r\n                d=\"flex\"\r\n                flexDir=\"column\"\r\n                p={3}\r\n                bg=\"#F8F8F8\"\r\n                w=\"100%\"\r\n                h=\"100%\"\r\n                borderRadius=\"lg\"\r\n                overflowY=\"hidden\"\r\n            >\r\n                {chats?(\r\n                    <Stack overflowY={'scroll'}>\r\n                        {chats.map((chat)=>(\r\n                            <Box\r\n                            onClick={() => setSelectedChat(chat)}\r\n                            cursor=\"pointer\"\r\n                            bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                            color={selectedChat === chat ? \"white\" : \"black\"}\r\n                            px={3}\r\n                            py={2}\r\n                            borderRadius=\"lg\"\r\n                            key={chat._id}\r\n                            >\r\n                                <Text>\r\n                                {!chat.isGroupChat\r\n                                    ? getSender(loggedUser, chat.users)\r\n                                    : chat.chatName}\r\n                                </Text>\r\n                            </Box>\r\n                        ))}\r\n                    </Stack>\r\n                ):(\r\n                    <ChatLoading/>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MyChats"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}